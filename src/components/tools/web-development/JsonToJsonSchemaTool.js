import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { Clipboard, ClipboardCheck } from 'lucide-react';
import { toJsonSchema } from 'to-json-schema';
const JsonToJsonSchemaTool = () => {
    const [jsonInput, setJsonInput] = useState('');
    const [jsonSchema, setJsonSchema] = useState('');
    const [copied, setCopied] = useState(false);
    const handleConvert = () => {
        try {
            const json = JSON.parse(jsonInput);
            const schema = toJsonSchema(json);
            setJsonSchema(JSON.stringify(schema, null, 2));
        }
        catch {
            setJsonSchema('Invalid JSON input.');
        }
    };
    const handleCopy = () => {
        navigator.clipboard.writeText(jsonSchema);
        setCopied(true);
        setTimeout(() => setCopied(false), 2000);
    };
    return (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 gap-4 md:grid-cols-2", children: [_jsx(Textarea, { placeholder: "Paste your JSON here...", className: "h-48 text-base", value: jsonInput, onChange: (e) => setJsonInput(e.target.value) }), _jsxs("div", { className: "relative", children: [_jsx(Textarea, { placeholder: "JSON Schema will appear here...", className: "h-48 text-base", value: jsonSchema, readOnly: true }), _jsx(Button, { variant: "ghost", size: "icon", className: "absolute top-2 right-2", onClick: handleCopy, disabled: !jsonSchema, children: copied ? _jsx(ClipboardCheck, { className: "h-5 w-5 text-green-500" }) : _jsx(Clipboard, { className: "h-5 w-5" }) })] })] }), _jsx(Button, { onClick: handleConvert, disabled: !jsonInput, children: "Convert to JSON Schema" }), _jsxs("div", { className: "max-w-4xl mx-auto space-y-12 text-left", children: [_jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "What is JSON to JSON Schema?" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "A JSON to JSON Schema converter is a tool that automatically generates a JSON Schema from a given JSON object. JSON Schema is a powerful tool for validating the structure of JSON data. It allows you to define the expected data types, formats, and constraints for each field in a JSON object. This is incredibly useful for ensuring the quality and consistency of your data, especially when working with APIs or other data sources." }), _jsx("p", { children: "By generating a JSON Schema, you can create a blueprint for your JSON data, which can then be used to validate new data, generate documentation, and more." })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Why Use a JSON to JSON Schema Converter?" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "You'll find a JSON to JSON Schema converter useful in many situations:" }), _jsxs("ul", { className: "list-disc list-inside space-y-3 pl-4", children: [_jsxs("li", { children: [_jsx("strong", { children: "Data Validation:" }), " Use the generated schema to validate that incoming JSON data conforms to the expected structure."] }), _jsxs("li", { children: [_jsx("strong", { children: "API Documentation:" }), " A JSON Schema can serve as a clear and concise documentation for your API, making it easier for other developers to understand and use."] }), _jsxs("li", { children: [_jsx("strong", { children: "Code Generation:" }), " Some tools can use a JSON Schema to generate code for processing the corresponding JSON data."] }), _jsxs("li", { children: [_jsx("strong", { children: "Data Migration:" }), " When migrating data from one system to another, a JSON Schema can help to ensure that the data is transformed correctly."] })] })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Key Components of JSON Schema" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "A JSON Schema is a JSON object that defines the structure of other JSON objects. Some of the key components of a JSON Schema include:" }), _jsxs("ul", { className: "list-disc list-inside space-y-3 pl-4", children: [_jsxs("li", { children: [_jsx("strong", { children: "`type`" }), ": The data type of a field (e.g., \"string\", \"number\", \"boolean\", \"object\", \"array\")."] }), _jsxs("li", { children: [_jsx("strong", { children: "`properties`" }), ": The fields that are expected to be present in an object."] }), _jsxs("li", { children: [_jsx("strong", { children: "`required`" }), ": An array of the fields that are required to be present in an object."] }), _jsxs("li", { children: [_jsx("strong", { children: "`items`" }), ": The schema for the items in an array."] })] }), _jsx("p", { children: "Our tool intelligently generates a JSON Schema that accurately reflects the structure of your JSON data." })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "How to Use Our JSON to JSON Schema Converter" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "Our tool makes converting your JSON to a JSON Schema simple:" }), _jsxs("ol", { className: "list-decimal list-inside space-y-3 pl-4", children: [_jsxs("li", { children: [_jsx("strong", { children: "Paste Your JSON:" }), " Copy your JSON data and paste it into the input text area."] }), _jsxs("li", { children: [_jsx("strong", { children: "Click the Convert Button:" }), " Press the \"Convert to JSON Schema\" button. The tool will instantly generate a JSON Schema based on your input."] }), _jsxs("li", { children: [_jsx("strong", { children: "Copy the JSON Schema:" }), " The generated JSON Schema will appear in the output area, ready for you to copy and use in your project."] })] })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Frequently Asked Questions (FAQ)" }), _jsxs("div", { className: "mt-4 space-y-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold", children: "What is the difference between JSON and JSON Schema?" }), _jsx("p", { className: "text-muted-foreground mt-1", children: "JSON is a data format, while JSON Schema is a language for defining the structure of JSON data. You can think of JSON Schema as a blueprint for your JSON data." })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold", children: "Can I use this tool to validate my JSON data?" }), _jsx("p", { className: "text-muted-foreground mt-1", children: "This tool is for generating a JSON Schema from your JSON data. To validate your JSON data against a schema, you can use our JSON Validator tool." })] })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Fun Fact" }), _jsx("div", { className: "mt-4 space-y-4 text-muted-foreground", children: _jsx("p", { children: "JSON Schema was first created in 2009 by a group of developers who were working on a project called \"JS-Class\". The project was intended to be a way to define classes in JavaScript, but it eventually evolved into a more general-purpose language for defining the structure of JSON data." }) })] })] })] }));
};
export default JsonToJsonSchemaTool;
