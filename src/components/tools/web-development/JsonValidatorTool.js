import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
import { Terminal } from 'lucide-react';
const JsonValidatorTool = () => {
    const [jsonInput, setJsonInput] = useState('');
    const [isValid, setIsValid] = useState(null);
    const handleValidate = () => {
        try {
            JSON.parse(jsonInput);
            setIsValid(true);
        }
        catch {
            setIsValid(false);
        }
    };
    return (_jsxs("div", { className: "space-y-4", children: [_jsx(Textarea, { placeholder: "Paste your JSON here...", className: "h-96 text-base", value: jsonInput, onChange: (e) => setJsonInput(e.target.value) }), _jsx(Button, { onClick: handleValidate, disabled: !jsonInput, children: "Validate JSON" }), isValid !== null && (_jsxs(Alert, { variant: isValid ? 'default' : 'destructive', children: [_jsx(Terminal, { className: "h-4 w-4" }), _jsx(AlertTitle, { children: isValid ? 'Valid JSON' : 'Invalid JSON' }), _jsx(AlertDescription, { children: isValid
                            ? 'The JSON you entered is valid.'
                            : 'The JSON you entered is not valid. Please check the syntax and try again.' })] })), _jsxs("div", { className: "max-w-4xl mx-auto space-y-12 text-left", children: [_jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "What is a JSON Validator?" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "A JSON Validator is a tool that checks whether a given piece of text is valid JSON. JSON (JavaScript Object Notation) has a strict syntax, and any deviation from this syntax will cause parsing errors. A validator ensures that your JSON data adheres to these rules, which is crucial for data interchange between different systems and applications." }), _jsx("p", { children: "By using a JSON Validator, you can quickly identify and fix syntax errors in your JSON data, ensuring that it can be correctly parsed and processed by any application that consumes it." })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Why Use a JSON Validator?" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "You'll find a JSON Validator essential in many situations:" }), _jsxs("ul", { className: "list-disc list-inside space-y-3 pl-4", children: [_jsxs("li", { children: [_jsx("strong", { children: "Debugging:" }), " Quickly find and fix syntax errors in your JSON data."] }), _jsxs("li", { children: [_jsx("strong", { children: "API Development:" }), " Ensure that the JSON data you are sending and receiving from an API is valid."] }), _jsxs("li", { children: [_jsx("strong", { children: "Data Integration:" }), " When integrating data from different sources, a validator can help to ensure that the data is in the correct format."] }), _jsxs("li", { children: [_jsx("strong", { children: "Configuration Files:" }), " Many applications use JSON for configuration files. A validator can help to ensure that these files are correctly formatted."] })] })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Key Components of JSON Validation" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "The validation process involves checking for several key aspects of the JSON syntax:" }), _jsxs("ul", { className: "list-disc list-inside space-y-3 pl-4", children: [_jsxs("li", { children: [_jsx("strong", { children: "Properly-formed objects and arrays:" }), " Objects must be enclosed in curly braces, and arrays must be enclosed in square brackets."] }), _jsxs("li", { children: [_jsx("strong", { children: "Correct use of commas:" }), " Commas must be used to separate key-value pairs in objects and elements in arrays."] }), _jsxs("li", { children: [_jsx("strong", { children: "Correct use of quotes:" }), " Keys and string values must be enclosed in double quotes."] })] }), _jsx("p", { children: "Our tool intelligently checks for these and other rules to ensure that your JSON data is valid." })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "How to Use Our JSON Validator" }), _jsxs("div", { className: "mt-4 space-y-4 text-muted-foreground", children: [_jsx("p", { children: "Our tool makes validating your JSON data simple:" }), _jsxs("ol", { className: "list-decimal list-inside space-y-3 pl-4", children: [_jsxs("li", { children: [_jsx("strong", { children: "Paste Your JSON:" }), " Copy your JSON data and paste it into the input text area."] }), _jsxs("li", { children: [_jsx("strong", { children: "Click the Validate Button:" }), " Press the \"Validate JSON\" button. The tool will instantly check your code for syntax errors."] }), _jsxs("li", { children: [_jsx("strong", { children: "View the Result:" }), " The tool will tell you whether your JSON is valid or not. If it is not valid, it will provide a helpful error message to help you find and fix the problem."] })] })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Frequently Asked Questions (FAQ)" }), _jsxs("div", { className: "mt-4 space-y-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold", children: "What is the difference between a validator and a formatter?" }), _jsx("p", { className: "text-muted-foreground mt-1", children: "A validator checks your code for errors, while a formatter makes it more readable. It's a good practice to use both tools." })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold", children: "Can I use this tool to validate my JSON data against a schema?" }), _jsx("p", { className: "text-muted-foreground mt-1", children: "This tool is for validating the syntax of your JSON data. To validate your JSON data against a schema, you can use our JSON to JSON Schema tool to generate a schema, and then use a JSON Schema validator." })] })] })] }), _jsxs("section", { children: [_jsx("h2", { className: "text-2xl font-bold tracking-tight", children: "Fun Fact" }), _jsx("div", { className: "mt-4 space-y-4 text-muted-foreground", children: _jsx("p", { children: "The JSON specification is surprisingly short and simple. The official JSON website, json.org, displays the entire syntax on a single page. This simplicity is one of the reasons why JSON has become so popular." }) })] })] })] }));
};
export default JsonValidatorTool;
