import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
const OpenGraphGeneratorTool = () => {
    const [title, setTitle] = useState('');
    const [description, setDescription] = useState('');
    const [image, setImage] = useState('');
    const [url, setUrl] = useState('');
    const [siteName, setSiteName] = useState('');
    const [type, setType] = useState('website');
    const [openGraphTags, setOpenGraphTags] = useState('');
    const generateOpenGraphTags = () => {
        const tags = `
      <meta property="og:title" content="${title}">
      <meta property="og:description" content="${description}">
      <meta property="og:image" content="${image}">
      <meta property="og:url" content="${url}">
      <meta property="og:site_name" content="${siteName}">
      <meta property="og:type" content="${type}">
    `;
        setOpenGraphTags(tags.trim());
    };
    return (_jsxs(_Fragment, { children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Open Graph Generator" }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsx(Input, { type: "text", value: title, onChange: e => setTitle(e.target.value), placeholder: "og:title" }), _jsx(Input, { type: "text", value: siteName, onChange: e => setSiteName(e.target.value), placeholder: "og:site_name" }), _jsx(Input, { type: "text", value: url, onChange: e => setUrl(e.target.value), placeholder: "og:url", className: "md:col-span-2" }), _jsx(Input, { type: "text", value: image, onChange: e => setImage(e.target.value), placeholder: "og:image", className: "md:col-span-2" }), _jsx(Textarea, { value: description, onChange: e => setDescription(e.target.value), placeholder: "og:description", className: "md:col-span-2" }), _jsx(Input, { type: "text", value: type, onChange: e => setType(e.target.value), placeholder: "og:type (e.g., website, article)" })] }), _jsx(Button, { onClick: generateOpenGraphTags, className: "mt-4", children: "Generate Open Graph Tags" }), openGraphTags && (_jsxs("div", { className: "mt-4", children: [_jsx("h3", { className: "text-lg font-semibold mb-2", children: "Generated Open Graph Tags:" }), _jsx("pre", { className: "bg-gray-100 p-4 rounded-md overflow-x-auto", children: _jsx("code", { children: openGraphTags }) })] }))] })] }), _jsxs("div", { className: "mt-8", children: [_jsx("h2", { className: "text-2xl font-bold mb-4", children: "What is an Open Graph Generator?" }), _jsx("p", { className: "mb-4", children: "An Open Graph Generator is a tool that helps you create Open Graph tags for your website. These tags are used by social media platforms like Facebook, Twitter, and LinkedIn to display rich snippets of your content when it's shared. By using an Open Graph Generator, you can ensure that your content is displayed in the most appealing way possible, which can lead to higher click-through rates and more engagement." }), _jsx("p", { className: "mb-4", children: "When you share a link on social media, the platform's crawler will visit the page to look for Open Graph tags. If it finds them, it will use the information in those tags to create a rich snippet. If it doesn't find them, it will try to guess what to display, which can lead to less-than-ideal results." }), _jsx("h2", { className: "text-2xl font-bold mb-4", children: "Factors to Consider" }), _jsx("p", { className: "mb-4", children: "When generating Open Graph tags, there are several factors to consider. These include:" }), _jsxs("ul", { className: "list-disc list-inside mb-4", children: [_jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:title:" }), " The title of your content. This should be concise and compelling."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:description:" }), " A one- to two-sentence description of your content."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:image:" }), " The URL of an image that represents your content. This is one of the most important tags, as images can significantly increase engagement."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:url:" }), " The canonical URL of your content."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:type:" }), " The type of content you're sharing (e.g., article, video, website)."] })] }), _jsx("h2", { className: "text-2xl font-bold mb-4", children: "Key Components of Open Graph Generation" }), _jsx("p", { className: "mb-4", children: "Our Open Graph Generator helps you create the most important Open Graph tags for your website. Here are the key components:" }), _jsxs("ul", { className: "list-disc list-inside mb-4", children: [_jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:title:" }), " The title of your content."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:description:" }), " A short description of your content."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:image:" }), " The URL of an image that represents your content."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:url:" }), " The canonical URL of your content."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:site_name:" }), " The name of your website."] }), _jsxs("li", { className: "mb-2", children: [_jsx("strong", { children: "og:type:" }), " The type of content you're sharing."] })] }), _jsx("h2", { className: "text-2xl font-bold mb-4", children: "How to Use the Tool" }), _jsx("p", { className: "mb-4", children: "Using our Open Graph Generator is easy. Just follow these steps:" }), _jsxs("ol", { className: "list-decimal list-inside mb-4", children: [_jsx("li", { className: "mb-2", children: "Fill in the fields above with your content's information." }), _jsx("li", { className: "mb-2", children: "Click the \"Generate Open Graph Tags\" button." }), _jsxs("li", { className: "mb-2", children: ["Copy the generated tags and paste them into the", ' ', _jsx("code", { children: '<head>' }), " section of your website's HTML."] })] }), _jsx("h2", { className: "text-2xl font-bold mb-4", children: "Frequently Asked Questions (FAQ)" }), _jsxs("div", { className: "mb-4", children: [_jsx("h3", { className: "text-xl font-semibold mb-2", children: "What is the difference between Open Graph and Twitter Cards?" }), _jsx("p", { children: "Open Graph is a protocol that's used by many social media platforms, including Facebook, LinkedIn, and Pinterest. Twitter Cards are similar, but they're specific to Twitter. If you have both Open Graph and Twitter Card tags on your site, Twitter will use the Twitter Card tags." })] }), _jsxs("div", { className: "mb-4", children: [_jsx("h3", { className: "text-xl font-semibold mb-2", children: "Do I need to use an Open Graph Generator?" }), _jsx("p", { children: "You don't need to use an Open Graph Generator, but it can save you a lot of time and effort. It's also a good way to ensure that your tags are formatted correctly." })] }), _jsxs("div", { className: "mb-4", children: [_jsx("h3", { className: "text-xl font-semibold mb-2", children: "What are the benefits of using Open Graph tags?" }), _jsx("p", { children: "The main benefit of using Open Graph tags is that they give you more control over how your content is displayed on social media. This can lead to higher click-through rates and more engagement." })] }), _jsx("h2", { className: "text-2xl font-bold mb-4", children: "Fun Fact" }), _jsx("p", { children: "The Open Graph protocol was first introduced by Facebook at their F8 conference in 2010. It's now used by billions of web pages across the internet!" })] })] }));
};
export default OpenGraphGeneratorTool;
